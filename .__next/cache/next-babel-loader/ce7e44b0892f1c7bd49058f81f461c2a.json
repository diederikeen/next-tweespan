{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/diederik/Projects/next-2-span/components/TopBar/TopBar.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Wrap, CartWrap } from \"./TopBar.styles\";\nimport { Container } from \"../../styles\";\nimport Link from \"next/link\";\nimport { ReactSVG } from \"react-svg\";\nimport { useCart } from \"../../src/context/cart\";\nimport { formatCurrency } from \"../../helpers/formatting\";\n\nvar TopBar = function TopBar() {\n  _s();\n\n  var _useCart = useCart(),\n      parsedCart = _useCart.cartContent;\n\n  var _useState = useState(true),\n      isNavOpen = _useState[0],\n      setIsNavOpen = _useState[1];\n\n  var cart = {\n    quantity: 0,\n    price: {\n      amount: \"0.0\"\n    }\n  };\n\n  if (parsedCart) {\n    cart = {\n      quantity: parsedCart.lineItems.edges.reduce(function (acc, obj) {\n        return acc + obj.node.quantity;\n      }, 0),\n      price: parsedCart.totalPriceV2\n    };\n  }\n\n  var CartIcon = \"/images/icons/cart.svg\";\n  var Logo = \"/images/icons/2-SPAN.svg\";\n  return __jsx(Wrap, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"flex items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: {\n      marginRight: \"auto\"\n    },\n    className: \"logo-wrap--mobile flex items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, __jsx(\"button\", {\n    className: \"mobile-toggle-button \".concat(isNavOpen && \"is-open\"),\n    onClick: function onClick() {\n      return setIsNavOpen(!isNavOpen);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }), __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }), __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  })), __jsx(Link, {\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"logo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, __jsx(ReactSVG, {\n    src: Logo,\n    wrapper: \"div\",\n    style: {\n      width: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  })))), __jsx(\"div\", {\n    className: \"content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, __jsx(CartWrap, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, __jsx(Link, {\n    href: \"/checkout\",\n    as: \"/checkout\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, __jsx(ReactSVG, {\n    src: CartIcon,\n    style: {\n      width: 24,\n      display: \"inline-block\",\n      cursor: \"pointer\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }\n  }), __jsx(\"span\", {\n    className: \"count\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, cart.quantity))))), __jsx(\"span\", {\n    className: \"price\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, formatCurrency(cart.price.amount))))));\n};\n\n_s(TopBar, \"oIXgz4gh8RTeONpw9eoPD6+Lwfo=\", false, function () {\n  return [useCart];\n});\n\n_c = TopBar;\nexport default TopBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopBar\");","map":{"version":3,"sources":["/Users/diederik/Projects/next-2-span/components/TopBar/TopBar.tsx"],"names":["React","useState","Wrap","CartWrap","Container","Link","ReactSVG","useCart","formatCurrency","TopBar","parsedCart","cartContent","isNavOpen","setIsNavOpen","cart","quantity","price","amount","lineItems","edges","reduce","acc","obj","node","totalPriceV2","CartIcon","Logo","marginRight","width","display","cursor"],"mappings":"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","sourcesContent":["import React, { FC, useState } from \"react\";\nimport { Wrap, CartWrap } from \"./TopBar.styles\";\nimport { Container } from \"../../styles\";\nimport Link from \"next/link\";\n\nimport { ReactSVG } from \"react-svg\";\nimport { useCart } from \"../../src/context/cart\";\nimport { formatCurrency } from \"../../helpers/formatting\";\n\ntype TLineItem = {\n  node: {\n    quantity: number;\n  };\n};\n\ntype TCart = {\n  quantity?: number;\n  price: {\n    amount: string;\n  };\n};\n\nconst TopBar: FC = () => {\n  const { cartContent: parsedCart } = useCart();\n  const [isNavOpen, setIsNavOpen] = useState<boolean>(true);\n  let cart: TCart = {\n    quantity: 0,\n    price: {\n      amount: \"0.0\",\n    },\n  };\n\n  if (parsedCart) {\n    cart = {\n      quantity: parsedCart.lineItems.edges.reduce(\n        (acc: number, obj: TLineItem) => acc + obj.node.quantity,\n        0\n      ),\n      price: parsedCart.totalPriceV2,\n    };\n  }\n\n  const CartIcon = \"/images/icons/cart.svg\";\n  const Logo = \"/images/icons/2-SPAN.svg\";\n\n  return (\n    <Wrap>\n      <Container>\n        <div className=\"flex items-center\">\n          <div\n            style={{ marginRight: \"auto\" }}\n            className=\"logo-wrap--mobile flex items-center\"\n          >\n            <button\n              className={`mobile-toggle-button ${isNavOpen && \"is-open\"}`}\n              onClick={() => setIsNavOpen(!isNavOpen)}\n            >\n              <span></span>\n              <span></span>\n              <span></span>\n            </button>\n\n            <Link href=\"/\">\n              <div className=\"logo\">\n                <ReactSVG src={Logo} wrapper=\"div\" style={{ width: \"100%\" }} />\n              </div>\n            </Link>\n          </div>\n          <div className=\"content\">\n            <CartWrap>\n              <Link href=\"/checkout\" as={`/checkout`}>\n                <a>\n                  <ReactSVG\n                    src={CartIcon}\n                    style={{\n                      width: 24,\n                      display: \"inline-block\",\n                      cursor: \"pointer\",\n                    }}\n                  />\n                  {/* TODO: Make quantity adjustable */}\n                  <span className=\"count\">\n                    <span>{cart.quantity}</span>\n                  </span>\n                </a>\n              </Link>\n            </CartWrap>\n            <span className=\"price\">{formatCurrency(cart.price.amount)}</span>\n          </div>\n        </div>\n      </Container>\n    </Wrap>\n  );\n};\n\nexport default TopBar;\n"]},"metadata":{},"sourceType":"module"}