{"ast":null,"code":"var _jsxFileName = \"/Users/diederik/Projects/next-2-span/components/Icon/Icon.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nconst icons = [{\n  type: \"trash-can\",\n  component: faTrashAlt\n}];\n\nconst Icon = ({\n  type,\n  fill,\n  className\n}) => {\n  const icon = icons.find(icon => icon.type === type);\n  return __jsx(FontAwesomeIcon, {\n    className: [className].join(\" \"),\n    color: fill,\n    icon: icon.component,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default Icon;","map":{"version":3,"sources":["/Users/diederik/Projects/next-2-span/components/Icon/Icon.tsx"],"names":["React","FontAwesomeIcon","faTrashAlt","icons","type","component","Icon","fill","className","icon","find","join"],"mappings":";;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,UAAT,QAA2B,mCAA3B;AAQA,MAAMC,KAAK,GAAG,CACZ;AACEC,EAAAA,IAAI,EAAE,WADR;AAEEC,EAAAA,SAAS,EAAEH;AAFb,CADY,CAAd;;AAOA,MAAMI,IAAoB,GAAG,CAAC;AAAEF,EAAAA,IAAF;AAAQG,EAAAA,IAAR;AAAcC,EAAAA;AAAd,CAAD,KAA+B;AAC1D,QAAMC,IAAI,GAAGN,KAAK,CAACO,IAAN,CAAYD,IAAD,IAAUA,IAAI,CAACL,IAAL,KAAcA,IAAnC,CAAb;AAEA,SACE,MAAC,eAAD;AACE,IAAA,SAAS,EAAE,CAACI,SAAD,EAAYG,IAAZ,CAAiB,GAAjB,CADb;AAEE,IAAA,KAAK,EAAEJ,IAFT;AAGE,IAAA,IAAI,EAAEE,IAAI,CAACJ,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAOD,CAVD;;AAYA,eAAeC,IAAf","sourcesContent":["import React, { FC } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface IIconProps {\n  type: string;\n  fill?: string;\n  className?: string;\n}\n\nconst icons = [\n  {\n    type: \"trash-can\",\n    component: faTrashAlt,\n  },\n];\n\nconst Icon: FC<IIconProps> = ({ type, fill, className }) => {\n  const icon = icons.find((icon) => icon.type === type);\n\n  return (\n    <FontAwesomeIcon\n      className={[className].join(\" \")}\n      color={fill}\n      icon={icon.component}\n    />\n  );\n};\n\nexport default Icon;\n"]},"metadata":{},"sourceType":"module"}