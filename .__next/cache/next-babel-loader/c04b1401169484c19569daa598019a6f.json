{"ast":null,"code":"var _jsxFileName = \"/Users/diederik/Projects/next-2-span/pages/about/index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_COLLECTIONS } from \"../../src/graphql/schema.graphql\";\n\nfunction About() {\n  _s();\n\n  var _useQuery = useQuery(GET_COLLECTIONS),\n      data = _useQuery.data,\n      loading = _useQuery.loading;\n\n  if (loading) {\n    return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 12\n      }\n    }, \"Loading\");\n  }\n\n  return __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, data.collections.edges.map(function (_ref) {\n    var category = _ref.node;\n  }));\n}\n\n_s(About, \"uHu6+Av6iz/Cemw652GCrFuaHvo=\", false, function () {\n  return [useQuery];\n});\n\n_c = About;\nexport default About;\n\nvar _c;\n\n$RefreshReg$(_c, \"About\");","map":{"version":3,"sources":["/Users/diederik/Projects/next-2-span/pages/about/index.tsx"],"names":["React","useQuery","GET_COLLECTIONS","About","data","loading","collections","edges","map","category","node"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,SAASC,eAAT,QAAgC,kCAAhC;;AA6BA,SAASC,KAAT,GAAiB;AAAA;;AAAA,kBACWF,QAAQ,CAAuBC,eAAvB,CADnB;AAAA,MACPE,IADO,aACPA,IADO;AAAA,MACDC,OADC,aACDA,OADC;;AAGf,MAAIA,OAAJ,EAAa;AACX,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACD;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,CAACE,WAAL,CAAiBC,KAAjB,CAAuBC,GAAvB,CAA2B,gBAAwB;AAAA,QAAfC,QAAe,QAArBC,IAAqB;AAAE,GAArD,CADH,CADF;AAKD;;GAZQP,K;UACmBF,Q;;;KADnBE,K;AAcT,eAAeA,KAAf","sourcesContent":["import React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport { GET_COLLECTIONS } from \"../../src/graphql/schema.graphql\";\n\ntype TSingleProduct = {\n  handle: string;\n  id: string;\n};\n\ntype TImage = {\n  id: string;\n  altText: string;\n  originalSrc: string;\n};\n\ntype TSingleCollection = {\n  node: {\n    handle: string;\n    id: string;\n    image: TImage;\n    products: TSingleProduct;\n  };\n};\n\ninterface ICollectionsResponse {\n  collections: {\n    edges: Array<TSingleCollection>;\n  };\n  loading: boolean;\n}\n\nfunction About() {\n  const { data, loading } = useQuery<ICollectionsResponse>(GET_COLLECTIONS);\n\n  if (loading) {\n    return <p>Loading</p>;\n  }\n\n  return (\n    <div className=\"container\">\n      {data.collections.edges.map(({ node: category }) => {})}\n    </div>\n  );\n}\n\nexport default About;\n"]},"metadata":{},"sourceType":"module"}