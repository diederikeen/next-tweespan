{"ast":null,"code":"var _jsxFileName = \"/Users/diederik/Projects/next-2-span/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport NextApp from \"next/app\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider, useQuery } from \"@apollo/react-hooks\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { ThemeProvider } from \"styled-components\";\nconst theme = {\n  primary: \"green\"\n};\nexport default class App extends NextApp {\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    console.log(process.env.SHOPIFY_ACCESS_URL);\n    const client = new ApolloClient({\n      uri: process.env.SHOPIFY_ACCESS_URL,\n      cache: new InMemoryCache(),\n      headers: {\n        Accept: \"application/json\",\n        \"X-Shopify-Storefront-Access-Token\": process.env.SHOPIFY_ACCESS_TOKEN\n      },\n      onError: err => console.log(err)\n    });\n    return __jsx(ApolloProvider, {\n      client: client,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, __jsx(ThemeProvider, {\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/diederik/Projects/next-2-span/pages/_app.js"],"names":["React","NextApp","ApolloClient","ApolloProvider","useQuery","InMemoryCache","ThemeProvider","theme","primary","App","render","Component","pageProps","props","console","log","process","env","SHOPIFY_ACCESS_URL","client","uri","cache","headers","Accept","SHOPIFY_ACCESS_TOKEN","onError","err"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,UAApB;AAEA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,cAAT,EAAyBC,QAAzB,QAAyC,qBAAzC;AACA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,SAASC,aAAT,QAA8B,mBAA9B;AAEA,MAAMC,KAAK,GAAG;AACZC,EAAAA,OAAO,EAAE;AADG,CAAd;AAIA,eAAe,MAAMC,GAAN,SAAkBR,OAAlB,CAA0B;AACvCS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA2B,KAAKC,KAAtC;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAAR,CAAYC,kBAAxB;AAEA,UAAMC,MAAM,GAAG,IAAIjB,YAAJ,CAAiB;AAC9BkB,MAAAA,GAAG,EAAEJ,OAAO,CAACC,GAAR,CAAYC,kBADa;AAE9BG,MAAAA,KAAK,EAAE,IAAIhB,aAAJ,EAFuB;AAI9BiB,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,6CAAqCP,OAAO,CAACC,GAAR,CAAYO;AAF1C,OAJqB;AAS9BC,MAAAA,OAAO,EAAGC,GAAD,IAASZ,OAAO,CAACC,GAAR,CAAYW,GAAZ;AATY,KAAjB,CAAf;AAYA,WACE,MAAC,cAAD;AAAgB,MAAA,MAAM,EAAEP,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,aAAD;AAAe,MAAA,KAAK,EAAEZ,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD,eAAeK,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF,CADF;AAOD;;AAzBsC","sourcesContent":["import React from \"react\";\nimport NextApp from \"next/app\";\n\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider, useQuery } from \"@apollo/react-hooks\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\n\nimport { ThemeProvider } from \"styled-components\";\n\nconst theme = {\n  primary: \"green\",\n};\n\nexport default class App extends NextApp {\n  render() {\n    const { Component, pageProps } = this.props;\n\n    console.log(process.env.SHOPIFY_ACCESS_URL);\n\n    const client = new ApolloClient({\n      uri: process.env.SHOPIFY_ACCESS_URL,\n      cache: new InMemoryCache(),\n\n      headers: {\n        Accept: \"application/json\",\n        \"X-Shopify-Storefront-Access-Token\": process.env.SHOPIFY_ACCESS_TOKEN,\n      },\n\n      onError: (err) => console.log(err),\n    });\n\n    return (\n      <ApolloProvider client={client}>\n        <ThemeProvider theme={theme}>\n          <Component {...pageProps} />\n        </ThemeProvider>\n      </ApolloProvider>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}