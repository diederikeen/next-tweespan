{"ast":null,"code":"var _jsxFileName = \"/Users/diederik/Projects/next-2-span/pages/categorie/[cid].tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_SINGLE_COLLECTION } from \"../../src/graphql/schema.graphql\";\nimport { Container, padding } from \"../../src/styles\";\nimport { Row, Col } from \"../index.styles\";\nimport ProductCard from \"../../src/components/shared/ProductCard\";\nimport { ProductTypes } from \"../../src/components/shared/ProductCard/types\";\nimport { titlelize } from \"../../src/helpers\";\n\nconst SingleCategory = () => {\n  const router = useRouter();\n  const {\n    cid\n  } = router.query;\n  const {\n    data,\n    loading\n  } = useQuery(GET_SINGLE_COLLECTION, {\n    variables: {\n      handle: cid\n    }\n  });\n  const categoryTitle = titlelize(cid, false);\n\n  if (loading) {\n    return __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      style: {\n        padding: `${padding.xxl} 0 ${padding.xl}`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, __jsx(\"h1\", {\n      className: \"section-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, \"Alle \", categoryTitle))));\n  }\n\n  const {\n    edges\n  } = data.collectionByHandle.products;\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    style: {\n      padding: `${padding.xxl} 0 ${padding.xl}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Alle \", categoryTitle))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, edges.map(({\n    node\n  }) => {\n    var _node$images$edges$;\n\n    console.log(node);\n    const nodeImage = (_node$images$edges$ = node.images.edges[0]) === null || _node$images$edges$ === void 0 ? void 0 : _node$images$edges$.node.originalSrc;\n    return __jsx(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, __jsx(ProductCard, {\n      type: ProductTypes.Product,\n      title: titlelize(node.title, false, true),\n      handle: node.handle,\n      imageUrl: nodeImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }));\n  })));\n};\n\nexport async function getStaticPaths() {\n  return {\n    paths: [\"/categorie/verlichting\", \"/categorie/banden\", \"/categorie/marathonwagens\"],\n    fallback: true\n  };\n}\nexport async function getStaticProps(props) {\n  return {\n    props: {\n      cid: props.params.cid\n    }\n  };\n}\nexport default SingleCategory;","map":{"version":3,"sources":["/Users/diederik/Projects/next-2-span/pages/categorie/[cid].tsx"],"names":["React","useRouter","useQuery","GET_SINGLE_COLLECTION","Container","padding","Row","Col","ProductCard","ProductTypes","titlelize","SingleCategory","router","cid","query","data","loading","variables","handle","categoryTitle","xxl","xl","edges","collectionByHandle","products","map","node","console","log","nodeImage","images","originalSrc","Product","title","getStaticPaths","paths","fallback","getStaticProps","props","params"],"mappings":"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","sourcesContent":["import React, { FC } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport { ISingleCollection } from \"./types\";\n\nimport { GET_SINGLE_COLLECTION } from \"../../src/graphql/schema.graphql\";\nimport { Container, padding } from \"../../src/styles\";\nimport { Row, Col } from \"../index.styles\";\nimport ProductCard from \"../../src/components/shared/ProductCard\";\nimport { ProductTypes } from \"../../src/components/shared/ProductCard/types\";\nimport { titlelize } from \"../../src/helpers\";\n\nconst SingleCategory: FC = () => {\n  const router = useRouter();\n  const { cid } = router.query;\n\n  const { data, loading }: ISingleCollection = useQuery(GET_SINGLE_COLLECTION, {\n    variables: {\n      handle: cid,\n    },\n  });\n\n  const categoryTitle = titlelize(cid, false);\n\n  if (loading) {\n    return (\n      <Container>\n        <div style={{ padding: `${padding.xxl} 0 ${padding.xl}` }}>\n          <h1 className=\"section-title\">\n            <span>Alle {categoryTitle}</span>\n          </h1>\n        </div>\n      </Container>\n    );\n  }\n\n  const { edges } = data.collectionByHandle.products;\n\n  return (\n    <Container>\n      <div style={{ padding: `${padding.xxl} 0 ${padding.xl}` }}>\n        <h1 className=\"section-title\">\n          <span>Alle {categoryTitle}</span>\n        </h1>\n      </div>\n      <Row>\n        {edges.map(({ node }) => {\n          console.log(node);\n          const nodeImage = node.images.edges[0]?.node.originalSrc;\n          return (\n            <Col>\n              <ProductCard\n                type={ProductTypes.Product}\n                title={titlelize(node.title, false, true)}\n                handle={node.handle}\n                imageUrl={nodeImage}\n              />\n            </Col>\n          );\n        })}\n      </Row>\n    </Container>\n  );\n};\n\nexport async function getStaticPaths() {\n  return {\n    paths: [\n      \"/categorie/verlichting\",\n      \"/categorie/banden\",\n      \"/categorie/marathonwagens\",\n    ],\n    fallback: true,\n  };\n}\n\nexport async function getStaticProps(props: { params: { cid: string } }) {\n  return {\n    props: {\n      cid: props.params.cid,\n    },\n  };\n}\n\nexport default SingleCategory;\n"]},"metadata":{},"sourceType":"module"}