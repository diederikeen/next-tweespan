{"ast":null,"code":"var _jsxFileName = \"/Users/diederik/Projects/next-2-span/pages/categorie/[cid].tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useQuery } from \"@apollo/react-hooks\"; // import MainLayout from \"../../layouts/main\";\n\nimport { GET_SINGLE_COLLECTION } from \"../../src/graphql/schema.graphql\";\n\nconst SingleCategory = props => {\n  // const router = useRouter();\n  // const { cid } = router.query;\n  // console.log({ props });\n  // console.log(router);\n  // const { data, loading }: ISingleCollection = useQuery(GET_SINGLE_COLLECTION, {\n  //   variables: {\n  //     handle: cid,\n  //   },\n  // });\n  // const { edges } = !loading && data.collectionByHandle.products;\n  return (// <MainLayout>\n    __jsx(React.Fragment, null, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, \"hi\")) // </MainLayout>\n\n  );\n}; // export async function getStaticPaths() {\n//   return {\n//     fallback: true,\n//   };\n// }\n// export function getStaticPaths() {\n//   return {\n//     fallback: true,\n//   };\n// }\n\n\nexport async function getStaticProps(context) {\n  console.log(context);\n  const router = useRouter();\n  const {\n    cid\n  } = router.query;\n  const {\n    data,\n    loading\n  } = useQuery(GET_SINGLE_COLLECTION, {\n    variables: {\n      handle: cid\n    }\n  });\n  return {\n    loading,\n    data\n  };\n}\nexport default SingleCategory;","map":{"version":3,"sources":["/Users/diederik/Projects/next-2-span/pages/categorie/[cid].tsx"],"names":["React","useRouter","useQuery","GET_SINGLE_COLLECTION","SingleCategory","props","getStaticProps","context","console","log","router","cid","query","data","loading","variables","handle"],"mappings":";;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,QAAyB,qBAAzB,C,CAEA;;AACA,SAASC,qBAAT,QAAsC,kCAAtC;;AAyBA,MAAMC,cAAkB,GAAIC,KAAD,IAAW;AACpC;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA,SACE;AACA,gCAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,CAFF,CAUE;;AAVF;AAYD,CA3BD,C,CA6BA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,QAAMG,MAAM,GAAGT,SAAS,EAAxB;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAUD,MAAM,CAACE,KAAvB;AAEA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAuCZ,QAAQ,CAACC,qBAAD,EAAwB;AAC3EY,IAAAA,SAAS,EAAE;AACTC,MAAAA,MAAM,EAAEL;AADC;AADgE,GAAxB,CAArD;AAMA,SAAO;AACLG,IAAAA,OADK;AAELD,IAAAA;AAFK,GAAP;AAID;AAED,eAAeT,cAAf","sourcesContent":["import React, { FC } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\n// import MainLayout from \"../../layouts/main\";\nimport { GET_SINGLE_COLLECTION } from \"../../src/graphql/schema.graphql\";\n\ntype TSingleProduct = {\n  node: {\n    id: string;\n    title: string;\n    handle: string;\n  };\n};\n\ntype TSingleCollection = {\n  description?: string;\n  id: string;\n  products: {\n    edges: Array<TSingleProduct>;\n  };\n};\n\ninterface ISingleCollection {\n  data: {\n    collectionByHandle: TSingleCollection;\n  };\n  loading: boolean;\n}\n\nconst SingleCategory: FC = (props) => {\n  // const router = useRouter();\n  // const { cid } = router.query;\n  // console.log({ props });\n\n  // console.log(router);\n\n  // const { data, loading }: ISingleCollection = useQuery(GET_SINGLE_COLLECTION, {\n  //   variables: {\n  //     handle: cid,\n  //   },\n  // });\n\n  // const { edges } = !loading && data.collectionByHandle.products;\n\n  return (\n    // <MainLayout>\n    <>\n      {/* <p>I'm category: {cid}</p> */}\n      {/* {!loading &&\n        edges.map(({ node }) => {\n          return <p>{node.title}</p>;\n        })} */}\n      <p>hi</p>\n    </>\n    // </MainLayout>\n  );\n};\n\n// export async function getStaticPaths() {\n//   return {\n//     fallback: true,\n//   };\n// }\n\n// export function getStaticPaths() {\n//   return {\n//     fallback: true,\n//   };\n// }\n\nexport async function getStaticProps(context) {\n  console.log(context);\n  const router = useRouter();\n  const { cid } = router.query;\n\n  const { data, loading }: ISingleCollection = useQuery(GET_SINGLE_COLLECTION, {\n    variables: {\n      handle: cid,\n    },\n  });\n\n  return {\n    loading,\n    data,\n  };\n}\n\nexport default SingleCategory;\n"]},"metadata":{},"sourceType":"module"}