{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/diederik/Projects/next-2-span/pages/categorie/[cid].tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_SINGLE_COLLECTION } from \"../../src/graphql/schema.graphql\";\nimport { Container, padding } from \"../../src/styles\";\nimport { Row, Col } from \"../index.styles\";\nimport { titlelize } from \"./helpers\";\nimport ProductCard from \"../../src/components/shared/ProductCard\";\n\nvar SingleCategory = function SingleCategory(props) {\n  _s();\n\n  var router = useRouter();\n  var cid = router.query.cid;\n\n  var _useQuery = useQuery(GET_SINGLE_COLLECTION, {\n    variables: {\n      handle: cid\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading;\n\n  var categoryTitle = titlelize(cid, false);\n\n  if (loading) {\n    return __jsx(Container, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      style: {\n        padding: \"\".concat(padding.xxl, \" 0 \").concat(padding.xl)\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, __jsx(\"h1\", {\n      className: \"section-title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, \"Alle \", categoryTitle))));\n  }\n\n  var edges = data.collectionByHandle.products.edges;\n  return __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    style: {\n      padding: \"\".concat(padding.xxl, \" 0 \").concat(padding.xl)\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    className: \"section-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"Alle \", categoryTitle))), edges.map(function (_ref) {\n    var node = _ref.node;\n    console.log(node);\n    var nodeImage = node.images.edges[0].node.originalSrc;\n    return __jsx(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, __jsx(ProductCard, {\n      title: titlelize(node.title, false, true),\n      handle: node.handle,\n      imageUrl: nodeImage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    })));\n  }));\n};\n\n_s(SingleCategory, \"oQZdBkEABeBGFdh0Oq/dfcyit4I=\", false, function () {\n  return [useRouter, useQuery];\n});\n\n_c = SingleCategory;\nexport var __N_SSG = true;\nexport default SingleCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleCategory\");","map":{"version":3,"sources":["/Users/diederik/Projects/next-2-span/pages/categorie/[cid].tsx"],"names":["React","useRouter","useQuery","GET_SINGLE_COLLECTION","Container","padding","Row","Col","titlelize","ProductCard","SingleCategory","props","router","cid","query","variables","handle","data","loading","categoryTitle","xxl","xl","edges","collectionByHandle","products","map","node","console","log","nodeImage","images","originalSrc","title"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAIA,SAASC,qBAAT,QAAsC,kCAAtC;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,kBAAnC;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,SAASC,SAAT,QAA0B,WAA1B;AACA,OAAOC,WAAP,MAAwB,yCAAxB;;AAEA,IAAMC,cAAkB,GAAG,SAArBA,cAAqB,CAACC,KAAD,EAAW;AAAA;;AACpC,MAAMC,MAAM,GAAGX,SAAS,EAAxB;AADoC,MAE5BY,GAF4B,GAEpBD,MAAM,CAACE,KAFa,CAE5BD,GAF4B;;AAAA,kBAISX,QAAQ,CAACC,qBAAD,EAAwB;AAC3EY,IAAAA,SAAS,EAAE;AACTC,MAAAA,MAAM,EAAEH;AADC;AADgE,GAAxB,CAJjB;AAAA,MAI5BI,IAJ4B,aAI5BA,IAJ4B;AAAA,MAItBC,OAJsB,aAItBA,OAJsB;;AAUpC,MAAMC,aAAa,GAAGX,SAAS,CAACK,GAAD,EAAM,KAAN,CAA/B;;AAEA,MAAIK,OAAJ,EAAa;AACX,WACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAE;AAAEb,QAAAA,OAAO,YAAKA,OAAO,CAACe,GAAb,gBAAsBf,OAAO,CAACgB,EAA9B;AAAT,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYF,aAAZ,CADF,CADF,CADF,CADF;AASD;;AAtBmC,MAwB5BG,KAxB4B,GAwBlBL,IAAI,CAACM,kBAAL,CAAwBC,QAxBN,CAwB5BF,KAxB4B;AA0BpC,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAE;AAAEjB,MAAAA,OAAO,YAAKA,OAAO,CAACe,GAAb,gBAAsBf,OAAO,CAACgB,EAA9B;AAAT,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAYF,aAAZ,CADF,CADF,CADF,EAOGG,KAAK,CAACG,GAAN,CAAU,gBAAc;AAAA,QAAXC,IAAW,QAAXA,IAAW;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,QAAMG,SAAS,GAAGH,IAAI,CAACI,MAAL,CAAYR,KAAZ,CAAkB,CAAlB,EAAqBI,IAArB,CAA0BK,WAA5C;AACA,WACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,WAAD;AACE,MAAA,KAAK,EAAEvB,SAAS,CAACkB,IAAI,CAACM,KAAN,EAAa,KAAb,EAAoB,IAApB,CADlB;AAEE,MAAA,MAAM,EAAEN,IAAI,CAACV,MAFf;AAGE,MAAA,QAAQ,EAAEa,SAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF;AAWD,GAdA,CAPH,CADF;AAyBD,CAnDD;;GAAMnB,c;UACWT,S,EAG8BC,Q;;;KAJzCQ,c;;AAwEN,eAAeA,cAAf","sourcesContent":["import React, { FC } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport { ISingleCollection } from \"./types\";\n\nimport { GET_SINGLE_COLLECTION } from \"../../src/graphql/schema.graphql\";\nimport { Container, padding } from \"../../src/styles\";\nimport { Row, Col } from \"../index.styles\";\nimport { titlelize } from \"./helpers\";\nimport ProductCard from \"../../src/components/shared/ProductCard\";\n\nconst SingleCategory: FC = (props) => {\n  const router = useRouter();\n  const { cid } = router.query;\n\n  const { data, loading }: ISingleCollection = useQuery(GET_SINGLE_COLLECTION, {\n    variables: {\n      handle: cid,\n    },\n  });\n\n  const categoryTitle = titlelize(cid, false);\n\n  if (loading) {\n    return (\n      <Container>\n        <div style={{ padding: `${padding.xxl} 0 ${padding.xl}` }}>\n          <h1 className=\"section-title\">\n            <span>Alle {categoryTitle}</span>\n          </h1>\n        </div>\n      </Container>\n    );\n  }\n\n  const { edges } = data.collectionByHandle.products;\n\n  return (\n    <Container>\n      <div style={{ padding: `${padding.xxl} 0 ${padding.xl}` }}>\n        <h1 className=\"section-title\">\n          <span>Alle {categoryTitle}</span>\n        </h1>\n      </div>\n\n      {edges.map(({ node }) => {\n        console.log(node);\n        const nodeImage = node.images.edges[0].node.originalSrc;\n        return (\n          <Row>\n            <Col>\n              <ProductCard\n                title={titlelize(node.title, false, true)}\n                handle={node.handle}\n                imageUrl={nodeImage}\n              />\n            </Col>\n          </Row>\n        );\n      })}\n    </Container>\n  );\n};\n\nexport async function getStaticPaths() {\n  return {\n    paths: [\n      \"/categorie/verlichting\",\n      \"/categorie/banden\",\n      \"/categorie/marathonwagens\",\n    ],\n    fallback: true,\n  };\n}\n\nexport async function getStaticProps(props: { params: { cid: string } }) {\n  return {\n    props: {\n      cid: props.params.cid,\n    },\n  };\n}\n\nexport default SingleCategory;\n"]},"metadata":{},"sourceType":"module"}