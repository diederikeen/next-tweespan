{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\n// TOASTER https://jossmac.github.io/react-toast-notifications/\nimport React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { GET_SINGLE_PRODUCT, UPDATE_CHECKOUT, CREATE_CHECKOUT } from \"../../src/graphql/schema.graphql\";\nimport { titlelize } from \"../../helpers\";\nimport { Container, padding } from \"../../styles\";\nimport ProductGallery from \"../../components/ProductGallery/ProductGallery\";\nimport { MainContent, Aside, Wrap } from \"./Product.styles\";\nimport ProductOptions from \"../../components/ProductGallery/components/ProductOptions\";\nimport { formatCurrency } from \"../../helpers/formatting\";\nimport { useCart } from \"../../src/context/cart\";\nimport ProductQuantitySelect from \"../../components/ProductQuantitySelect/ProductQuantitySelect\";\nimport HtmlHead from \"../../components/HtmlHead/HtmlHead\";\nvar ToasterContent;\n\n(function (ToasterContent) {\n  ToasterContent[\"Error\"] = \"Er is iets fout gegaan. Probeer opnieuw\";\n  ToasterContent[\"Success\"] = \"Product is succesvol toegevoegd\";\n})(ToasterContent || (ToasterContent = {}));\n\nvar SingleProduct = function SingleProduct() {\n  var router = useRouter();\n  var pid = router.query.pid;\n\n  var _useState = useState(null),\n      variant = _useState[0],\n      setVariant = _useState[1];\n\n  var _useState2 = useState(1),\n      quantity = _useState2[0],\n      setQuantity = _useState2[1];\n\n  var _useState3 = useState(),\n      checkoutId = _useState3[0],\n      setCheckoutId = _useState3[1];\n\n  var _useCart = useCart(),\n      setCartResponse = _useCart.setCartResponse;\n\n  var _useToasts = useToasts(),\n      addToast = _useToasts.addToast;\n\n  var _useQuery = useQuery(GET_SINGLE_PRODUCT, {\n    variables: {\n      handle: pid\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading;\n\n  var _useMutation = useMutation(CREATE_CHECKOUT),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      createCheckout = _useMutation2[0];\n\n  var _useMutation3 = useMutation(UPDATE_CHECKOUT),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      updateCart = _useMutation4[0];\n\n  var productTitle = titlelize(pid, true);\n  useEffect(function () {\n    if (!data) return;\n    setVariant(data.productByHandle.variants.edges[0].node);\n    setCheckoutId(localStorage.getItem(\"checkoutId\"));\n  }, [loading, data]);\n\n  if (loading || !variant) {\n    return null;\n  }\n\n  var product = data.productByHandle;\n  var hasMultipleImages = product.images.edges.length > 1;\n  var hasNoImage = !Boolean(product.images.edges.length);\n  var hasProductOptions = product.options.length > 1;\n  var disableProduct = variant.currentlyNotInStock || variant.quantityAvailable === 0;\n\n  var handleVariantChange = function handleVariantChange(id) {\n    var _product$variants$edg = product.variants.edges.find(function (_ref) {\n      var node = _ref.node;\n      return node.id === id;\n    }),\n        variant = _product$variants$edg.node;\n\n    setVariant(variant);\n  };\n\n  var handleDirectBuy = function handleDirectBuy() {\n    createCheckout({\n      variables: {\n        input: {\n          lineItems: [{\n            quantity: quantity,\n            variantId: variant.id\n          }]\n        }\n      }\n    }).then(function (res) {\n      return res;\n    }).then(function (_ref2) {\n      var data = _ref2.data;\n\n      if (!checkoutId) {\n        var id = data.checkoutCreate.checkout.id;\n        setCheckoutId(id);\n        localStorage.setItem(\"checkoutId\", id);\n      }\n\n      window.open(data.checkoutCreate.checkout.webUrl, \"_blank\");\n    });\n  };\n\n  var handleUpdateCart = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (checkoutId) {\n                _context.next = 4;\n                break;\n              }\n\n              _context.next = 3;\n              return createCheckout({\n                variables: {\n                  input: {\n                    lineItems: [{\n                      quantity: quantity,\n                      variantId: variant.id\n                    }]\n                  }\n                }\n              }).then(function (res) {\n                return res;\n              }).then(function (_ref4) {\n                var data = _ref4.data;\n                var id = data.checkoutCreate.checkout.id;\n                localStorage.setItem(\"checkoutId\", id);\n                setCheckoutId(id);\n                setCartResponse(data.checkoutCreate.checkout);\n              });\n\n            case 3:\n              return _context.abrupt(\"return\");\n\n            case 4:\n              _context.next = 6;\n              return updateCart({\n                variables: {\n                  checkoutId: checkoutId,\n                  lineItems: [{\n                    quantity: quantity,\n                    variantId: variant.id\n                  }]\n                }\n              }).then(function (res) {\n                return res;\n              }).then(function (_ref5) {\n                var data = _ref5.data;\n                setCartResponse(data.checkoutLineItemsAdd.checkout);\n                addToast(ToasterContent.Success, {\n                  appearance: \"success\",\n                  autoDismiss: true\n                });\n              })[\"catch\"](function (err) {\n                return addToast(ToasterContent.Error, {\n                  appearance: \"error\",\n                  autoDismiss: true\n                });\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleUpdateCart() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  console.log(product);\n  return __jsx(React.Fragment, null, __jsx(HtmlHead, {\n    customKey: \"main\",\n    title: \"2-Span | \".concat(productTitle),\n    description: product.description\n  }), __jsx(Container, null, __jsx(\"div\", {\n    style: {\n      padding: \"0 0 \".concat(padding.xl)\n    }\n  })), __jsx(Wrap, null, __jsx(Container, null, __jsx(\"div\", {\n    className: \"content-wrap\"\n  }, __jsx(\"div\", null), __jsx(MainContent, null, __jsx(ProductGallery, {\n    hasMultipleImages: hasMultipleImages,\n    hasNoImage: hasNoImage,\n    images: product.images.edges\n  })), __jsx(Aside, null, disableProduct && __jsx(\"span\", {\n    className: \"note warning margin-bottom-1\"\n  }, \"Tijdelijk niet beschikbaar\"), __jsx(\"h1\", null, productTitle), __jsx(\"h2\", {\n    className: \"product-price\"\n  }, formatCurrency(variant.priceV2.amount)), __jsx(\"p\", {\n    className: \"product-description\"\n  }, product.description), __jsx(\"div\", {\n    className: \"select-content\"\n  }, hasProductOptions && __jsx(ProductOptions, {\n    variants: product.variants,\n    onVariantChange: handleVariantChange\n  }), __jsx(ProductQuantitySelect, {\n    onChange: setQuantity,\n    maxAmount: variant.quantityAvailable\n  })), __jsx(\"div\", {\n    className: \"button-content\"\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn-primary\",\n    onClick: handleUpdateCart,\n    disabled: disableProduct\n  }, \"Toevoegen aan winkelwagen\"), __jsx(\"button\", {\n    style: {\n      marginLeft: \"1em\"\n    },\n    type: \"button\",\n    className: \"btn-ghost\",\n    onClick: handleDirectBuy,\n    disabled: disableProduct\n  }, \"of koop direct\")))))));\n};\n\nexport var __N_SSG = true;\nexport default SingleProduct;","map":null,"metadata":{},"sourceType":"module"}