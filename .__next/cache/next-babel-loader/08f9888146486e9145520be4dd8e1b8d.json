{"ast":null,"code":"var _jsxFileName = \"/Users/diederik/Projects/next-2-span/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_COLLECTIONS } from \"../src/graphql/schema.graphql\";\nimport { Container, padding } from \"../src/styles\";\nimport { Row, Col } from \"index.styles\";\nimport ProductCard, { ProductTypes } from \"../src/components/shared/ProductCard\";\n\nfunction Home() {\n  _s();\n\n  var _this = this;\n\n  var _useQuery = useQuery(GET_COLLECTIONS),\n      data = _useQuery.data,\n      loading = _useQuery.loading; //TODO Create spinner component / skeleton components\n\n\n  if (loading) {\n    return __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      style: {\n        margin: \"\".concat(padding.xxl, \" 0 \").concat(padding.xl)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, __jsx(\"h1\", {\n      className: \"section-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, \"Onze categorie\\xEBn\"))));\n  }\n\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    style: {\n      margin: \"\".concat(padding.xxl, \" 0 \").concat(padding.xl)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"Onze categorie\\xEBn\"))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, data.collections.edges.map(function (_ref) {\n    var category = _ref.node;\n    return __jsx(Col, {\n      key: category.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, __jsx(ProductCard, {\n      type: ProductTypes.Overview,\n      title: category.title,\n      handle: category.handle,\n      imageUrl: category.image.originalSrc,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }));\n  })));\n}\n\n_s(Home, \"uHu6+Av6iz/Cemw652GCrFuaHvo=\", false, function () {\n  return [useQuery];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/diederik/Projects/next-2-span/pages/index.tsx"],"names":["React","useQuery","GET_COLLECTIONS","Container","padding","Row","Col","ProductCard","ProductTypes","Home","data","loading","margin","xxl","xl","collections","edges","map","category","node","id","Overview","title","handle","image","originalSrc"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAGA,SAASC,eAAT,QAAgC,+BAAhC;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,eAAnC;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,cAAzB;AACA,OAAOC,WAAP,IACEC,YADF,QAEO,sCAFP;;AAIA,SAASC,IAAT,GAAgB;AAAA;;AAAA;;AAAA,kBACYR,QAAQ,CAAuBC,eAAvB,CADpB;AAAA,MACNQ,IADM,aACNA,IADM;AAAA,MACAC,OADA,aACAA,OADA,EAGd;;;AACA,MAAIA,OAAJ,EAAa;AACX,WACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,YAAKR,OAAO,CAACS,GAAb,gBAAsBT,OAAO,CAACU,EAA9B;AAAR,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,CADF,CADF,CADF;AASD;;AAED,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAE;AAAEF,MAAAA,MAAM,YAAKR,OAAO,CAACS,GAAb,gBAAsBT,OAAO,CAACU,EAA9B;AAAR,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADF,CADF,EAME,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,IAAI,CAACK,WAAL,CAAiBC,KAAjB,CAAuBC,GAAvB,CAA2B;AAAA,QAASC,QAAT,QAAGC,IAAH;AAAA,WAC1B,MAAC,GAAD;AAAK,MAAA,GAAG,EAAED,QAAQ,CAACE,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,WAAD;AACE,MAAA,IAAI,EAAEZ,YAAY,CAACa,QADrB;AAEE,MAAA,KAAK,EAAEH,QAAQ,CAACI,KAFlB;AAGE,MAAA,MAAM,EAAEJ,QAAQ,CAACK,MAHnB;AAIE,MAAA,QAAQ,EAAEL,QAAQ,CAACM,KAAT,CAAeC,WAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAD0B;AAAA,GAA3B,CADH,CANF,CADF;AAqBD;;GArCQhB,I;UACmBR,Q;;;KADnBQ,I;AAuCT,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport { ICollectionsResponse } from \"./types\";\nimport { GET_COLLECTIONS } from \"../src/graphql/schema.graphql\";\nimport { Container, padding } from \"../src/styles\";\nimport { Row, Col } from \"index.styles\";\nimport ProductCard, {\n  ProductTypes,\n} from \"../src/components/shared/ProductCard\";\n\nfunction Home() {\n  const { data, loading } = useQuery<ICollectionsResponse>(GET_COLLECTIONS);\n\n  //TODO Create spinner component / skeleton components\n  if (loading) {\n    return (\n      <Container>\n        <div style={{ margin: `${padding.xxl} 0 ${padding.xl}` }}>\n          <h1 className=\"section-title\">\n            <span>Onze categorieën</span>\n          </h1>\n        </div>\n      </Container>\n    );\n  }\n\n  return (\n    <Container>\n      <div style={{ margin: `${padding.xxl} 0 ${padding.xl}` }}>\n        <h1 className=\"section-title\">\n          <span>Onze categorieën</span>\n        </h1>\n      </div>\n      <Row>\n        {data.collections.edges.map(({ node: category }) => (\n          <Col key={category.id}>\n            <ProductCard\n              type={ProductTypes.Overview}\n              title={category.title}\n              handle={category.handle}\n              imageUrl={category.image.originalSrc}\n            />\n          </Col>\n        ))}\n      </Row>\n    </Container>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}