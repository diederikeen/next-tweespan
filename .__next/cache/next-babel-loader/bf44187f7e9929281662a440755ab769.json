{"ast":null,"code":"var _jsxFileName = \"/Users/diederik/Projects/next-2-span/pages/categorie/[cid].tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_SINGLE_COLLECTION } from \"../../src/graphql/schema.graphql\";\nimport { Container, padding } from \"../../src/styles\";\n\nconst titlelize = (handle, capitalized = false, unCapitlized = false) => {\n  let title = handle;\n\n  if (capitalized) {\n    title = title.charAt(0).toUpperCase() + handle.slice(1);\n  }\n\n  if (unCapitlized) {\n    title = title.charAt(0).toLowerCase() + handle.slice(1);\n  }\n\n  const strippedTitle = title.split(\"-\").join(\" \");\n  return strippedTitle;\n};\n\nconst SingleCategory = props => {\n  const router = useRouter();\n  const {\n    cid\n  } = router.query;\n  const {\n    data,\n    loading\n  } = useQuery(GET_SINGLE_COLLECTION, {\n    variables: {\n      handle: cid\n    }\n  });\n  const categoryTitle = titlelize(\"banden-wagen\", true, false);\n\n  if (loading) {\n    return __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      style: {\n        padding: `${padding.xxl} 0 ${padding.xl}`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, __jsx(\"h1\", {\n      className: \"section-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, \"Alle \", categoryTitle))));\n  }\n\n  const {\n    edges\n  } = data.collectionByHandle.products;\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    style: {\n      padding: `${padding.xxl} 0 ${padding.xl}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"Alle \", categoryTitle))), edges.map(({\n    node\n  }) => __jsx(\"p\", {\n    key: node.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, node.title)));\n};\n\nexport async function getStaticPaths() {\n  return {\n    paths: [\"/categorie/verlichting\", \"/categorie/banden\", \"/categorie/marathonwagens\"],\n    fallback: true\n  };\n}\nexport async function getStaticProps(props) {\n  return {\n    props: {\n      cid: props.params.cid\n    }\n  };\n}\nexport default SingleCategory;","map":{"version":3,"sources":["/Users/diederik/Projects/next-2-span/pages/categorie/[cid].tsx"],"names":["React","useRouter","useQuery","GET_SINGLE_COLLECTION","Container","padding","titlelize","handle","capitalized","unCapitlized","title","charAt","toUpperCase","slice","toLowerCase","strippedTitle","split","join","SingleCategory","props","router","cid","query","data","loading","variables","categoryTitle","xxl","xl","edges","collectionByHandle","products","map","node","getStaticPaths","paths","fallback","getStaticProps","params"],"mappings":"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","sourcesContent":["import React, { FC } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport { ISingleCollection } from \"./types\";\n\nimport { GET_SINGLE_COLLECTION } from \"../../src/graphql/schema.graphql\";\nimport { Container, padding } from \"../../src/styles\";\n\nconst titlelize = (handle: any, capitalized = false, unCapitlized = false) => {\n  let title = handle;\n\n  if (capitalized) {\n    title = title.charAt(0).toUpperCase() + handle.slice(1);\n  }\n\n  if (unCapitlized) {\n    title = title.charAt(0).toLowerCase() + handle.slice(1);\n  }\n\n  const strippedTitle = title.split(\"-\").join(\" \");\n  return strippedTitle;\n};\n\nconst SingleCategory: FC = (props) => {\n  const router = useRouter();\n  const { cid } = router.query;\n\n  const { data, loading }: ISingleCollection = useQuery(GET_SINGLE_COLLECTION, {\n    variables: {\n      handle: cid,\n    },\n  });\n\n  const categoryTitle = titlelize(\"banden-wagen\", true, false);\n\n  if (loading) {\n    return (\n      <Container>\n        <div style={{ padding: `${padding.xxl} 0 ${padding.xl}` }}>\n          <h1 className=\"section-title\">\n            <span>Alle {categoryTitle}</span>\n          </h1>\n        </div>\n      </Container>\n    );\n  }\n\n  const { edges } = data.collectionByHandle.products;\n\n  return (\n    <Container>\n      <div style={{ padding: `${padding.xxl} 0 ${padding.xl}` }}>\n        <h1 className=\"section-title\">\n          <span>Alle {categoryTitle}</span>\n        </h1>\n      </div>\n\n      {edges.map(({ node }) => (\n        <p key={node.title}>{node.title}</p>\n      ))}\n    </Container>\n  );\n};\n\nexport async function getStaticPaths() {\n  return {\n    paths: [\n      \"/categorie/verlichting\",\n      \"/categorie/banden\",\n      \"/categorie/marathonwagens\",\n    ],\n    fallback: true,\n  };\n}\n\nexport async function getStaticProps(props: { params: { cid: string } }) {\n  return {\n    props: {\n      cid: props.params.cid,\n    },\n  };\n}\n\nexport default SingleCategory;\n"]},"metadata":{},"sourceType":"module"}