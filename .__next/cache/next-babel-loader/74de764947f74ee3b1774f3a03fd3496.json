{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/diederik/Projects/next-2-span/src/context/cart.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { createContext, useContext, useState } from \"react\";\nimport lscache from \"lscache\";\nvar test = lscache.get(\"cart\");\nvar initialValues = test ? JSON.parse(test) : {};\nvar cartContext = createContext({\n  cartContent: initialValues,\n  setCartResponse: function setCartResponse(obj) {}\n});\nexport var CartContextProvider = function CartContextProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(initialValues),\n      cartContent = _useState[0],\n      setCartContent = _useState[1];\n\n  var setCartResponse = function setCartResponse(res) {\n    lscache.set(\"cart\", JSON.stringify(res));\n    console.log(\"jo\");\n    setCartContent(res);\n  };\n\n  return __jsx(cartContext.Provider, {\n    value: {\n      cartContent: cartContent,\n      setCartResponse: setCartResponse\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, children);\n};\n\n_s(CartContextProvider, \"wW0alBsUZq1fmsrzhrh9vRcm2NU=\");\n\n_c = CartContextProvider;\nexport var useCart = function useCart() {\n  _s2();\n\n  var _useContext = useContext(cartContext),\n      cartContent = _useContext.cartContent,\n      setCartResponse = _useContext.setCartResponse;\n\n  return {\n    cartContent: JSON.parse(cartContent),\n    setCartResponse: setCartResponse\n  };\n};\n\n_s2(useCart, \"j+BzlYLS/HqyDrAKwf/4tGZFp5M=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"CartContextProvider\");","map":{"version":3,"sources":["/Users/diederik/Projects/next-2-span/src/context/cart.tsx"],"names":["createContext","useContext","useState","lscache","test","get","initialValues","JSON","parse","cartContext","cartContent","setCartResponse","obj","CartContextProvider","children","setCartContent","res","set","stringify","console","log","useCart"],"mappings":";;;;;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEA,IAAMC,IAAI,GAAGD,OAAO,CAACE,GAAR,CAAY,MAAZ,CAAb;AAEA,IAAMC,aAAa,GAAGF,IAAI,GAAGG,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAH,GAAsB,EAAhD;AACA,IAAMK,WAAW,GAAGT,aAAa,CAAC;AAChCU,EAAAA,WAAW,EAAEJ,aADmB;AAEhCK,EAAAA,eAAe,EAAE,yBAACC,GAAD,EAAiB,CAAE;AAFJ,CAAD,CAAjC;AASA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAyB;AAAA;;AAAA,MAAtBC,QAAsB,QAAtBA,QAAsB;;AAAA,kBACpBZ,QAAQ,CAACI,aAAD,CADY;AAAA,MACnDI,WADmD;AAAA,MACtCK,cADsC;;AAG1D,MAAMJ,eAAe,GAAG,SAAlBA,eAAkB,CAACK,GAAD,EAAiB;AACvCb,IAAAA,OAAO,CAACc,GAAR,CAAY,MAAZ,EAAoBV,IAAI,CAACW,SAAL,CAAeF,GAAf,CAApB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAL,IAAAA,cAAc,CAACC,GAAD,CAAd;AACD,GAJD;;AAMA,SACE,MAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLN,MAAAA,WAAW,EAAXA,WADK;AAELC,MAAAA,eAAe,EAAfA;AAFK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGG,QANH,CADF;AAUD,CAnBM;;GAAMD,mB;;KAAAA,mB;AAqBb,OAAO,IAAMQ,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AAAA,oBACcpB,UAAU,CAACQ,WAAD,CADxB;AAAA,MACnBC,WADmB,eACnBA,WADmB;AAAA,MACNC,eADM,eACNA,eADM;;AAE3B,SAAO;AACLD,IAAAA,WAAW,EAAEH,IAAI,CAACC,KAAL,CAAWE,WAAX,CADR;AAELC,IAAAA,eAAe,EAAfA;AAFK,GAAP;AAID,CANM;;IAAMU,O","sourcesContent":["import { createContext, useContext, useState } from \"react\";\nimport lscache from \"lscache\";\n\nconst test = lscache.get(\"cart\");\n\nconst initialValues = test ? JSON.parse(test) : {};\nconst cartContext = createContext({\n  cartContent: initialValues,\n  setCartResponse: (obj: object) => {},\n});\n\ninterface Props {\n  children: React.Component;\n}\n\nexport const CartContextProvider = ({ children }: Props) => {\n  const [cartContent, setCartContent] = useState(initialValues);\n\n  const setCartResponse = (res: object) => {\n    lscache.set(\"cart\", JSON.stringify(res));\n    console.log(\"jo\");\n    setCartContent(res);\n  };\n\n  return (\n    <cartContext.Provider\n      value={{\n        cartContent,\n        setCartResponse,\n      }}\n    >\n      {children}\n    </cartContext.Provider>\n  );\n};\n\nexport const useCart = () => {\n  const { cartContent, setCartResponse } = useContext(cartContext);\n  return {\n    cartContent: JSON.parse(cartContent),\n    setCartResponse,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}