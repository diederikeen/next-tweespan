{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/diederik/Projects/next-2-span/pages/categorie/[cid].tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useQuery } from \"@apollo/react-hooks\"; // import MainLayout from \"../../layouts/main\";\n\nimport { GET_SINGLE_COLLECTION } from \"../../src/graphql/schema.graphql\";\n\n// const SingleCategory: FC = (props) => {\nfunction SingleCategory(props) {\n  console.log({\n    props: props\n  }); // const router = useRouter();\n  // const { cid } = router.query;\n  // console.log({ props });\n  // console.log(router);\n  // const { data, loading }: ISingleCollection = useQuery(GET_SINGLE_COLLECTION, {\n  //   variables: {\n  //     handle: cid,\n  //   },\n  // });\n  // const { edges } = !loading && data.collectionByHandle.products;\n\n  return __jsx(React.Fragment, null, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"hi\"));\n} // export async function getStaticPaths() {\n//   return {\n//     paths: [\"/categorie/marathon-wagens\"],\n//     fallback: true,\n//   };\n// }\n// export async function getStaticProps(context: GetStaticProps) {\n//   console.log(context);\n//   // const router = useRouter();\n//   // const { cid } = router.query;\n//   // const { data, loading }: ISingleCollection = useQuery(GET_SINGLE_COLLECTION, {\n//   //   variables: {\n//   //     handle: cid,\n//   //   },\n//   // });\n//   return {\n//     loading: false,\n//     data: [{ name: \"test\" }],\n//   };\n// }\n\n\n_c = SingleCategory;\n\nSingleCategory.getInitialProps = /*#__PURE__*/function () {\n  var _s = $RefreshSig$();\n\n  var _ref = _asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var router, cid, _useQuery, data, loading;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _s();\n\n            router = useRouter();\n            cid = router.query.cid;\n            _useQuery = useQuery(GET_SINGLE_COLLECTION, {\n              variables: {\n                handle: cid\n              }\n            }), data = _useQuery.data, loading = _useQuery.loading;\n            return _context.abrupt(\"return\", {\n              test: \"test\"\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }), \"oQZdBkEABeBGFdh0Oq/dfcyit4I=\", false, function () {\n    return [useRouter, useQuery];\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default SingleCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleCategory\");","map":{"version":3,"sources":["/Users/diederik/Projects/next-2-span/pages/categorie/[cid].tsx"],"names":["React","useRouter","useQuery","GET_SINGLE_COLLECTION","SingleCategory","props","console","log","getInitialProps","ctx","router","cid","query","variables","handle","data","loading","test"],"mappings":";;;;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AAEA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,QAAyB,qBAAzB,C,CAEA;;AACA,SAASC,qBAAT,QAAsC,kCAAtC;;AAyBA;AACA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEF,IAAAA,KAAK,EAALA;AAAF,GAAZ,EAD6B,CAE7B;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA,SACE,4BAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANF,CADF;AAUD,C,CAED;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;KAlDSD,c;;AAoDTA,cAAc,CAACI,eAAf;AAAA;;AAAA,yEAAiC,iBAAOC,GAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AACzBC,YAAAA,MADyB,GAChBT,SAAS,EADO;AAEvBU,YAAAA,GAFuB,GAEfD,MAAM,CAACE,KAFQ,CAEvBD,GAFuB;AAAA,wBAIcT,QAAQ,CAACC,qBAAD,EAAwB;AAC3EU,cAAAA,SAAS,EAAE;AACTC,gBAAAA,MAAM,EAAEH;AADC;AADgE,aAAxB,CAJtB,EAIvBI,IAJuB,aAIvBA,IAJuB,EAIjBC,OAJiB,aAIjBA,OAJiB;AAAA,6CAUxB;AACLC,cAAAA,IAAI,EAAE;AADD,aAVwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjC;AAAA,YACiBhB,SADjB,EAI+CC,QAJ/C;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAeA,eAAeE,cAAf","sourcesContent":["import React, { FC } from \"react\";\nimport { GetStaticProps } from \"next\";\nimport { useRouter } from \"next/router\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\n// import MainLayout from \"../../layouts/main\";\nimport { GET_SINGLE_COLLECTION } from \"../../src/graphql/schema.graphql\";\n\ntype TSingleProduct = {\n  node: {\n    id: string;\n    title: string;\n    handle: string;\n  };\n};\n\ntype TSingleCollection = {\n  description?: string;\n  id: string;\n  products: {\n    edges: Array<TSingleProduct>;\n  };\n};\n\ninterface ISingleCollection {\n  data: {\n    collectionByHandle: TSingleCollection;\n  };\n  loading: boolean;\n}\n\n// const SingleCategory: FC = (props) => {\nfunction SingleCategory(props) {\n  console.log({ props });\n  // const router = useRouter();\n  // const { cid } = router.query;\n  // console.log({ props });\n\n  // console.log(router);\n\n  // const { data, loading }: ISingleCollection = useQuery(GET_SINGLE_COLLECTION, {\n  //   variables: {\n  //     handle: cid,\n  //   },\n  // });\n\n  // const { edges } = !loading && data.collectionByHandle.products;\n\n  return (\n    <>\n      {/* <p>I'm category: {cid}</p> */}\n      {/* {!loading &&\n        edges.map(({ node }) => {\n          return <p>{node.title}</p>;\n        })} */}\n      <p>hi</p>\n    </>\n  );\n}\n\n// export async function getStaticPaths() {\n//   return {\n//     paths: [\"/categorie/marathon-wagens\"],\n//     fallback: true,\n//   };\n// }\n\n// export async function getStaticProps(context: GetStaticProps) {\n//   console.log(context);\n//   // const router = useRouter();\n//   // const { cid } = router.query;\n\n//   // const { data, loading }: ISingleCollection = useQuery(GET_SINGLE_COLLECTION, {\n//   //   variables: {\n//   //     handle: cid,\n//   //   },\n//   // });\n\n//   return {\n//     loading: false,\n//     data: [{ name: \"test\" }],\n//   };\n// }\n\nSingleCategory.getInitialProps = async (ctx) => {\n  const router = useRouter();\n  const { cid } = router.query;\n\n  const { data, loading }: ISingleCollection = useQuery(GET_SINGLE_COLLECTION, {\n    variables: {\n      handle: cid,\n    },\n  });\n\n  return {\n    test: \"test\",\n  };\n};\n\nexport default SingleCategory;\n"]},"metadata":{},"sourceType":"module"}