{"ast":null,"code":"var _jsxFileName = \"/Users/diederik/Projects/next-2-span/pages/categorie/[cid].tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport MainLayout from \"../../layouts/main\";\nimport { GET_SINGLE_COLLECTION } from \"../../src/graphql/schema.graphql\";\n\nfunction Category() {\n  const router = useRouter();\n  const {\n    cid\n  } = router.query;\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_SINGLE_COLLECTION);\n\n  if (!loading) {\n    console.log(data);\n  }\n\n  return __jsx(MainLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, \"I'm category: \", cid));\n}\n\nexport default Category;","map":{"version":3,"sources":["/Users/diederik/Projects/next-2-span/pages/categorie/[cid].tsx"],"names":["React","useRouter","useQuery","MainLayout","GET_SINGLE_COLLECTION","Category","router","cid","query","data","loading","error","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,SAASC,qBAAT,QAAsC,kCAAtC;;AAEA,SAASC,QAAT,GAAoB;AAClB,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAUD,MAAM,CAACE,KAAvB;AAEA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BT,QAAQ,CAACE,qBAAD,CAAzC;;AAEA,MAAI,CAACM,OAAL,EAAc;AACZE,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACD;;AAED,SACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAkBF,GAAlB,CADF,CADF;AAKD;;AAED,eAAeF,QAAf","sourcesContent":["import React from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport MainLayout from \"../../layouts/main\";\nimport { GET_SINGLE_COLLECTION } from \"../../src/graphql/schema.graphql\";\n\nfunction Category() {\n  const router = useRouter();\n  const { cid } = router.query;\n\n  const { data, loading, error } = useQuery(GET_SINGLE_COLLECTION);\n\n  if (!loading) {\n    console.log(data);\n  }\n\n  return (\n    <MainLayout>\n      <p>I'm category: {cid}</p>\n    </MainLayout>\n  );\n}\n\nexport default Category;\n"]},"metadata":{},"sourceType":"module"}