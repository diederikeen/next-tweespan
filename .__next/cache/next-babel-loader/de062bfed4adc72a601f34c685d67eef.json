{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/diederik/Projects/next-2-span/pages/categorie/[cid].tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport MainLayout from \"../../layouts/main\";\nimport { GET_SINGLE_COLLECTION } from \"../../src/graphql/schema.graphql\";\n\nvar SingleCategory = function SingleCategory() {\n  _s();\n\n  var router = useRouter();\n  var cid = router.query.cid;\n\n  var _useQuery = useQuery(GET_SINGLE_COLLECTION, {\n    variables: {\n      handle: cid\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading;\n\n  if (!loading) {\n    console.log(data);\n  }\n\n  return __jsx(MainLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, __jsx(React.Fragment, null, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"I'm category: \", cid), !loading && __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 22\n    }\n  }, \"done loading\")));\n};\n\n_s(SingleCategory, \"Z2opimgYca6FrLeQhok4t1idnnE=\", false, function () {\n  return [useRouter, useQuery];\n});\n\n_c = SingleCategory;\nexport default SingleCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleCategory\");","map":{"version":3,"sources":["/Users/diederik/Projects/next-2-span/pages/categorie/[cid].tsx"],"names":["React","useRouter","useQuery","MainLayout","GET_SINGLE_COLLECTION","SingleCategory","router","cid","query","variables","handle","data","loading","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,SAASC,qBAAT,QAAsC,kCAAtC;;AASA,IAAMC,cAAkB,GAAG,SAArBA,cAAqB,GAAM;AAAA;;AAC/B,MAAMC,MAAM,GAAGL,SAAS,EAAxB;AAD+B,MAEvBM,GAFuB,GAEfD,MAAM,CAACE,KAFQ,CAEvBD,GAFuB;;AAAA,kBAIEL,QAAQ,CAACE,qBAAD,EAAwB;AAC/DK,IAAAA,SAAS,EAAE;AACTC,MAAAA,MAAM,EAAEH;AADC;AADoD,GAAxB,CAJV;AAAA,MAIvBI,IAJuB,aAIvBA,IAJuB;AAAA,MAIjBC,OAJiB,aAIjBA,OAJiB;;AAU/B,MAAI,CAACA,OAAL,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD;;AAED,SACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAkBJ,GAAlB,CADF,EAGG,CAACK,OAAD,IAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHf,CADF,CADF;AASD,CAvBD;;GAAMP,c;UACWJ,S,EAGkBC,Q;;;KAJ7BG,c;AAyBN,eAAeA,cAAf","sourcesContent":["import React, { FC } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport MainLayout from \"../../layouts/main\";\nimport { GET_SINGLE_COLLECTION } from \"../../src/graphql/schema.graphql\";\n\ninterface ITest {\n  data: {\n    collectionByHandle: any;\n  };\n  loading: boolean;\n}\n\nconst SingleCategory: FC = () => {\n  const router = useRouter();\n  const { cid } = router.query;\n\n  const { data, loading }: ITest = useQuery(GET_SINGLE_COLLECTION, {\n    variables: {\n      handle: cid,\n    },\n  });\n\n  if (!loading) {\n    console.log(data);\n  }\n\n  return (\n    <MainLayout>\n      <>\n        <p>I'm category: {cid}</p>\n\n        {!loading && <p>done loading</p>}\n      </>\n    </MainLayout>\n  );\n};\n\nexport default SingleCategory;\n"]},"metadata":{},"sourceType":"module"}