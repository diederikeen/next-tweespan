{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_SINGLE_COLLECTION } from \"../../src/graphql/schema.graphql\";\nimport { Container, padding } from \"../../styles\";\nimport { titlelize } from \"../../helpers\";\nimport { ProductCard } from \"../../components\";\nimport { ProductTypes } from \"../../components/ProductCard/types\";\nimport HtmlHead from \"../../components/HtmlHead/HtmlHead\";\nimport { Col, Row } from \"../../layouts/main/MainLayout.styles\";\n\nconst SingleCategory = () => {\n  var _data$collectionByHan;\n\n  const router = useRouter();\n  const {\n    cid\n  } = router.query;\n  const {\n    data,\n    loading\n  } = useQuery(GET_SINGLE_COLLECTION, {\n    variables: {\n      handle: cid\n    }\n  });\n  const categoryTitle = titlelize(cid, false);\n  const prettyTitle = titlelize(cid, true); //TODO MAKE THIS A COMPONENT\n\n  if (loading) {\n    return __jsx(React.Fragment, null, __jsx(HtmlHead, {\n      title: `2-Span | ${prettyTitle}`\n    }), __jsx(Container, null, __jsx(\"div\", {\n      style: {\n        margin: `${padding.xxl} 0 ${padding.xl}`\n      }\n    }, __jsx(\"h1\", {\n      className: \"section-title\"\n    }, __jsx(\"span\", null, \"Alle \", categoryTitle)))));\n  }\n\n  const {\n    edges\n  } = data === null || data === void 0 ? void 0 : (_data$collectionByHan = data.collectionByHandle) === null || _data$collectionByHan === void 0 ? void 0 : _data$collectionByHan.products;\n  return __jsx(React.Fragment, null, __jsx(HtmlHead, {\n    title: `2-Span | ${prettyTitle}`,\n    url: window.location.href\n  }), __jsx(Container, null, __jsx(\"div\", {\n    style: {\n      margin: `${padding.xxl} 0 ${padding.xl}`\n    }\n  }, __jsx(\"h1\", {\n    className: \"section-title\"\n  }, __jsx(\"span\", null, \"Alle \", categoryTitle))), __jsx(Row, null, edges.length > 0 ? edges.map(({\n    node\n  }) => {\n    var _node$images$edges$;\n\n    const nodeImage = (_node$images$edges$ = node.images.edges[0]) === null || _node$images$edges$ === void 0 ? void 0 : _node$images$edges$.node.originalSrc;\n    const hasMaxVariantPrice = node.priceRange.maxVariantPrice.amount !== node.priceRange.minVariantPrice.amount;\n    return __jsx(Col, {\n      key: node.id\n    }, __jsx(ProductCard, {\n      type: ProductTypes.Product,\n      title: titlelize(node.title, false, true),\n      handle: node.handle,\n      imageUrl: nodeImage,\n      minPrice: node.priceRange.minVariantPrice.amount,\n      maxPrice: hasMaxVariantPrice && node.priceRange.maxVariantPrice.amount\n    }));\n  }) : __jsx(\"div\", {\n    className: \"flex flex-center\",\n    style: {\n      opacity: \"0.5\",\n      width: \"100%\"\n    }\n  }, __jsx(\"h2\", null, \"Helaas er is niks gevonden in \", categoryTitle)))));\n};\n\nexport async function getStaticPaths() {\n  return {\n    paths: [\"/categorie/verlichting\", \"/categorie/banden\", \"/categorie/marathonwagens\"],\n    fallback: true\n  };\n}\nexport async function getStaticProps(props) {\n  var _props$params;\n\n  const categoryId = (props === null || props === void 0 ? void 0 : (_props$params = props.params) === null || _props$params === void 0 ? void 0 : _props$params.cid) || null;\n  console.log(\"category\", props);\n  return {\n    props: {\n      cid: categoryId || null\n    }\n  };\n}\nexport default SingleCategory;","map":null,"metadata":{},"sourceType":"module"}