{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/diederik/Projects/next-2-span/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport NextApp from \"next/app\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider, useQuery } from \"@apollo/react-hooks\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { ThemeProvider } from \"styled-components\";\nvar theme = {\n  primary: \"green\"\n};\n\nvar App = /*#__PURE__*/function (_NextApp) {\n  _inherits(App, _NextApp);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      var client = new ApolloClient({\n        uri: process.env.NEXT_PUBLIC_SHOPIFY_ACCESS_URL,\n        cache: new InMemoryCache(),\n        headers: {\n          Accept: \"application/json\",\n          \"X-Shopify-Storefront-Access-Token\": process.env.NEXT_PUBLIC_SHOPIFY_ACCESS_TOKEN\n        },\n        onError: function onError(err) {\n          return console.log(err);\n        }\n      });\n      return __jsx(ApolloProvider, {\n        client: client,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 7\n        }\n      }, __jsx(ThemeProvider, {\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, __jsx(MainLayout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, __jsx(Component, _extends({}, pageProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      })))));\n    }\n  }]);\n\n  return App;\n}(NextApp);\n\nexport { App as default };","map":{"version":3,"sources":["/Users/diederik/Projects/next-2-span/pages/_app.js"],"names":["React","NextApp","ApolloClient","ApolloProvider","useQuery","InMemoryCache","ThemeProvider","theme","primary","App","props","Component","pageProps","client","uri","process","env","NEXT_PUBLIC_SHOPIFY_ACCESS_URL","cache","headers","Accept","NEXT_PUBLIC_SHOPIFY_ACCESS_TOKEN","onError","err","console","log"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,UAApB;AAEA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,cAAT,EAAyBC,QAAzB,QAAyC,qBAAzC;AACA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,SAASC,aAAT,QAA8B,mBAA9B;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,OAAO,EAAE;AADG,CAAd;;IAIqBC,G;;;;;;;;;;;;;6BACV;AAAA,wBAC0B,KAAKC,KAD/B;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,SADZ,eACYA,SADZ;AAGP,UAAMC,MAAM,GAAG,IAAIX,YAAJ,CAAiB;AAC9BY,QAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,8BADa;AAE9BC,QAAAA,KAAK,EAAE,IAAIb,aAAJ,EAFuB;AAI9Bc,QAAAA,OAAO,EAAE;AACPC,UAAAA,MAAM,EAAE,kBADD;AAEP,+CACEL,OAAO,CAACC,GAAR,CAAYK;AAHP,SAJqB;AAU9BC,QAAAA,OAAO,EAAE,iBAACC,GAAD;AAAA,iBAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAT;AAAA;AAVqB,OAAjB,CAAf;AAaA,aACE,MAAC,cAAD;AAAgB,QAAA,MAAM,EAAEV,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,aAAD;AAAe,QAAA,KAAK,EAAEN,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,SAAD,eAAeK,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADF,CADF,CADF;AASD;;;;EA1B8BX,O;;SAAZQ,G","sourcesContent":["import React from \"react\";\nimport NextApp from \"next/app\";\n\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider, useQuery } from \"@apollo/react-hooks\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\n\nimport { ThemeProvider } from \"styled-components\";\n\nconst theme = {\n  primary: \"green\",\n};\n\nexport default class App extends NextApp {\n  render() {\n    const { Component, pageProps } = this.props;\n\n    const client = new ApolloClient({\n      uri: process.env.NEXT_PUBLIC_SHOPIFY_ACCESS_URL,\n      cache: new InMemoryCache(),\n\n      headers: {\n        Accept: \"application/json\",\n        \"X-Shopify-Storefront-Access-Token\":\n          process.env.NEXT_PUBLIC_SHOPIFY_ACCESS_TOKEN,\n      },\n\n      onError: (err) => console.log(err),\n    });\n\n    return (\n      <ApolloProvider client={client}>\n        <ThemeProvider theme={theme}>\n          <MainLayout>\n            <Component {...pageProps} />\n          </MainLayout>\n        </ThemeProvider>\n      </ApolloProvider>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}