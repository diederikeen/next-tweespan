{"ast":null,"code":"var _jsxFileName = \"/Users/diederik/Projects/next-2-span/pages/categorie/[cid].tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_COLLECTIONS } from \"../src/graphql/schema.graphql\";\nimport { Container } from \"../../src/styles\"; // import { Container } from \"../src/styles\";\n\nfunction Category() {\n  _s();\n\n  var _this = this;\n\n  var _useQuery = useQuery(GET_COLLECTIONS),\n      data = _useQuery.data,\n      loading = _useQuery.loading;\n\n  if (loading) {\n    return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 12\n      }\n    }, \"Loading\");\n  }\n\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, data.collections.edges.map(function (_ref) {\n    var category = _ref.node;\n    return __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, category.title);\n  })));\n}\n\n_s(Category, \"uHu6+Av6iz/Cemw652GCrFuaHvo=\", false, function () {\n  return [useQuery];\n});\n\n_c = Category;\nexport default Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["/Users/diederik/Projects/next-2-span/pages/categorie/[cid].tsx"],"names":["React","useQuery","GET_COLLECTIONS","Container","Category","data","loading","collections","edges","map","category","node","title"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,SAASC,eAAT,QAAgC,+BAAhC;AACA,SAASC,SAAT,QAA0B,kBAA1B,C,CACA;;AA8BA,SAASC,QAAT,GAAoB;AAAA;;AAAA;;AAAA,kBACQH,QAAQ,CAAuBC,eAAvB,CADhB;AAAA,MACVG,IADU,aACVA,IADU;AAAA,MACJC,OADI,aACJA,OADI;;AAGlB,MAAIA,OAAJ,EAAa;AACX,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACD;;AAED,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,CAACE,WAAL,CAAiBC,KAAjB,CAAuBC,GAAvB,CAA2B;AAAA,QAASC,QAAT,QAAGC,IAAH;AAAA,WAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,QAAQ,CAACE,KAAb,CAD0B;AAAA,GAA3B,CADH,CADF,CADF;AASD;;GAhBQR,Q;UACmBH,Q;;;KADnBG,Q;AAkBT,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport { GET_COLLECTIONS } from \"../src/graphql/schema.graphql\";\nimport { Container } from \"../../src/styles\";\n// import { Container } from \"../src/styles\";\n\ntype TSingleProduct = {\n  handle: string;\n  id: string;\n};\n\ntype TImage = {\n  id: string;\n  altText: string;\n  originalSrc: string;\n};\n\ntype TSingleCollection = {\n  node: {\n    handle: string;\n    id: string;\n    image: TImage;\n    products: TSingleProduct;\n    title: string;\n  };\n};\n\ninterface ICollectionsResponse {\n  collections: {\n    edges: Array<TSingleCollection>;\n  };\n  loading: boolean;\n}\n\nfunction Category() {\n  const { data, loading } = useQuery<ICollectionsResponse>(GET_COLLECTIONS);\n\n  if (loading) {\n    return <p>Loading</p>;\n  }\n\n  return (\n    <Container>\n      <div>\n        {data.collections.edges.map(({ node: category }: TSingleCollection) => (\n          <p>{category.title}</p>\n        ))}\n      </div>\n    </Container>\n  );\n}\n\nexport default Category;\n"]},"metadata":{},"sourceType":"module"}