{"ast":null,"code":"export const titlelize = (handle, capitalized = false, unCapitlized = false) => {\n  let title = handle;\n\n  if (capitalized) {\n    title = title.charAt(0).toUpperCase() + handle.slice(1);\n  }\n\n  if (unCapitlized) {\n    title = title.charAt(0).toLowerCase() + handle.slice(1);\n  }\n\n  const strippedTitle = title.split(\"-\").join(\" \");\n  return strippedTitle;\n};\nexport const formatCurrency = stringVal => {\n  const value = parseFloat(stringVal);\n  const formatter = new Intl.NumberFormat(\"nl-NL\", {\n    style: \"currency\",\n    currency: \"EUR\",\n    minimumFractionDigits: 2\n  });\n  return formatter.format(value);\n};","map":{"version":3,"sources":["/Users/diederik/Projects/next-2-span/helpers/formatting/index.ts"],"names":["titlelize","handle","capitalized","unCapitlized","title","charAt","toUpperCase","slice","toLowerCase","strippedTitle","split","join","formatCurrency","stringVal","value","parseFloat","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","format"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG,CACvBC,MADuB,EAEvBC,WAAW,GAAG,KAFS,EAGvBC,YAAY,GAAG,KAHQ,KAIpB;AACH,MAAIC,KAAK,GAAGH,MAAZ;;AAEA,MAAIC,WAAJ,EAAiB;AACfE,IAAAA,KAAK,GAAGA,KAAK,CAACC,MAAN,CAAa,CAAb,EAAgBC,WAAhB,KAAgCL,MAAM,CAACM,KAAP,CAAa,CAAb,CAAxC;AACD;;AAED,MAAIJ,YAAJ,EAAkB;AAChBC,IAAAA,KAAK,GAAGA,KAAK,CAACC,MAAN,CAAa,CAAb,EAAgBG,WAAhB,KAAgCP,MAAM,CAACM,KAAP,CAAa,CAAb,CAAxC;AACD;;AAED,QAAME,aAAa,GAAGL,KAAK,CAACM,KAAN,CAAY,GAAZ,EAAiBC,IAAjB,CAAsB,GAAtB,CAAtB;AAEA,SAAOF,aAAP;AACD,CAlBM;AAoBP,OAAO,MAAMG,cAAc,GAAIC,SAAD,IAAuB;AACnD,QAAMC,KAAK,GAAGC,UAAU,CAACF,SAAD,CAAxB;AACA,QAAMG,SAAS,GAAG,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAC/CC,IAAAA,KAAK,EAAE,UADwC;AAE/CC,IAAAA,QAAQ,EAAE,KAFqC;AAG/CC,IAAAA,qBAAqB,EAAE;AAHwB,GAA/B,CAAlB;AAMA,SAAOL,SAAS,CAACM,MAAV,CAAiBR,KAAjB,CAAP;AACD,CATM","sourcesContent":["export const titlelize = (\n  handle: any,\n  capitalized = false,\n  unCapitlized = false\n) => {\n  let title = handle;\n\n  if (capitalized) {\n    title = title.charAt(0).toUpperCase() + handle.slice(1);\n  }\n\n  if (unCapitlized) {\n    title = title.charAt(0).toLowerCase() + handle.slice(1);\n  }\n\n  const strippedTitle = title.split(\"-\").join(\" \");\n\n  return strippedTitle;\n};\n\nexport const formatCurrency = (stringVal: string) => {\n  const value = parseFloat(stringVal);\n  const formatter = new Intl.NumberFormat(\"nl-NL\", {\n    style: \"currency\",\n    currency: \"EUR\",\n    minimumFractionDigits: 2,\n  });\n\n  return formatter.format(value);\n};\n"]},"metadata":{},"sourceType":"module"}