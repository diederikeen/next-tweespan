{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport NextApp from \"next/app\";\nimport { ToastProvider } from \"react-toast-notifications\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { ThemeProvider } from \"styled-components\";\nimport HtmlHead from \"../components/HtmlHead/HtmlHead\";\nimport MainLayout from \"../layouts/main/MainLayout\";\nimport { CartContextProvider } from \"../src/context/cart\";\nvar theme = {\n  primary: \"green\"\n};\n\nvar App = /*#__PURE__*/function (_NextApp) {\n  _inherits(App, _NextApp);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      var client = new ApolloClient({\n        uri: process.env.NEXT_PUBLIC_SHOPIFY_ACCESS_URL,\n        cache: new InMemoryCache(),\n        headers: {\n          Accept: \"application/json\",\n          \"X-Shopify-Storefront-Access-Token\": process.env.NEXT_PUBLIC_SHOPIFY_ACCESS_TOKEN\n        },\n        onError: function onError(err) {\n          return console.log(err);\n        }\n      });\n      return __jsx(React.Fragment, null, __jsx(HtmlHead, {\n        customKey: \"main\"\n      }), __jsx(ApolloProvider, {\n        client: client\n      }, __jsx(CartContextProvider, null, __jsx(ThemeProvider, {\n        theme: theme\n      }, __jsx(MainLayout, null, __jsx(ToastProvider, {\n        placement: \"top-center\"\n      }, __jsx(Component, pageProps)))))));\n    }\n  }]);\n\n  return App;\n}(NextApp);\n\nexport { App as default };","map":null,"metadata":{},"sourceType":"module"}