{"ast":null,"code":"var _jsxFileName = \"/Users/diederik/Projects/next-2-span/pages/categorie/[cid].tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_SINGLE_COLLECTION } from \"../../src/graphql/schema.graphql\";\n\nfunction SingleCategory(_ref) {\n  _s();\n\n  var _this = this;\n\n  var props = _ref.props;\n  console.log(props);\n  var router = useRouter();\n  var cid = router.query.cid;\n\n  var _useQuery = useQuery(GET_SINGLE_COLLECTION, {\n    variables: {\n      handle: cid\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading;\n\n  if (loading) {\n    return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 12\n      }\n    }, \"loading\");\n  }\n\n  var edges = data.collectionByHandle.products.edges;\n  return __jsx(React.Fragment, null, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"I'm category: \", cid), edges.map(function (_ref2) {\n    var node = _ref2.node;\n    return __jsx(\"p\", {\n      key: node.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, node.title);\n  }));\n} // SingleCategory.getInitialProps({query}) {\n//   console.log('SLUG', query.slug)\n//   return {}\n// }\n\n\n_s(SingleCategory, \"oQZdBkEABeBGFdh0Oq/dfcyit4I=\", false, function () {\n  return [useRouter, useQuery];\n});\n\n_c = SingleCategory;\nexport var __N_SSG = true;\nexport default SingleCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleCategory\");","map":{"version":3,"sources":["/Users/diederik/Projects/next-2-span/pages/categorie/[cid].tsx"],"names":["React","useRouter","useQuery","GET_SINGLE_COLLECTION","SingleCategory","props","console","log","router","cid","query","variables","handle","data","loading","edges","collectionByHandle","products","map","node","title"],"mappings":";;;;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,SAASC,qBAAT,QAAsC,kCAAtC;;AAyBA,SAASC,cAAT,OAAwC;AAAA;;AAAA;;AAAA,MAAdC,KAAc,QAAdA,KAAc;AACtCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,MAAMG,MAAM,GAAGP,SAAS,EAAxB;AAFsC,MAG9BQ,GAH8B,GAGtBD,MAAM,CAACE,KAHe,CAG9BD,GAH8B;;AAAA,kBAKOP,QAAQ,CAACC,qBAAD,EAAwB;AAC3EQ,IAAAA,SAAS,EAAE;AACTC,MAAAA,MAAM,EAAEH;AADC;AADgE,GAAxB,CALf;AAAA,MAK9BI,IAL8B,aAK9BA,IAL8B;AAAA,MAKxBC,OALwB,aAKxBA,OALwB;;AAWtC,MAAIA,OAAJ,EAAa;AACX,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACD;;AAbqC,MAe9BC,KAf8B,GAepBF,IAAI,CAACG,kBAAL,CAAwBC,QAfJ,CAe9BF,KAf8B;AAiBtC,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAkBN,GAAlB,CADF,EAMGM,KAAK,CAACG,GAAN,CAAU;AAAA,QAAGC,IAAH,SAAGA,IAAH;AAAA,WACT;AAAG,MAAA,GAAG,EAAEA,IAAI,CAACC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqBD,IAAI,CAACC,KAA1B,CADS;AAAA,GAAV,CANH,CADF;AAYD,C,CAED;AACA;AACA;AACA;;;GAlCShB,c;UAEQH,S,EAG8BC,Q;;;KALtCE,c;;AAsDT,eAAeA,cAAf","sourcesContent":["import React, { FC } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport { GET_SINGLE_COLLECTION } from \"../../src/graphql/schema.graphql\";\n\ntype TSingleProduct = {\n  node: {\n    id: string;\n    title: string;\n    handle: string;\n  };\n};\n\ntype TSingleCollection = {\n  description?: string;\n  id: string;\n  products: {\n    edges: Array<TSingleProduct>;\n  };\n};\n\ninterface ISingleCollection {\n  data: {\n    collectionByHandle: TSingleCollection;\n  };\n  loading: boolean;\n}\n\nfunction SingleCategory({ props }: any) {\n  console.log(props);\n  const router = useRouter();\n  const { cid } = router.query;\n\n  const { data, loading }: ISingleCollection = useQuery(GET_SINGLE_COLLECTION, {\n    variables: {\n      handle: cid,\n    },\n  });\n\n  if (loading) {\n    return <p>loading</p>;\n  }\n\n  const { edges } = data.collectionByHandle.products;\n\n  return (\n    <>\n      <p>I'm category: {cid}</p>\n\n      {/* {edges.map(({ node }) => {\n          return <p key={node.title}>{node.title}</p>} */}\n\n      {edges.map(({ node }) => (\n        <p key={node.title}>{node.title}</p>\n      ))}\n    </>\n  );\n}\n\n// SingleCategory.getInitialProps({query}) {\n//   console.log('SLUG', query.slug)\n//   return {}\n// }\n\nexport async function getStaticPaths() {\n  console.log(\"static paths\");\n\n  return {\n    paths: [\"/categorie/banden\"],\n    fallback: true,\n  };\n}\n\nexport async function getStaticProps({ query }: any) {\n  console.log(\"static props\");\n  return {\n    props: {\n      cid: \"test-cid\",\n    },\n  };\n}\n\nexport default SingleCategory;\n"]},"metadata":{},"sourceType":"module"}